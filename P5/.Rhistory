scale_fill_brewer(palette = 'set1')+
facet_wrap(~ color)+
theme_dark()
ggplot(data= diamonds, aes(x= price))+
geom_histogram(aes(color = cut))+
scale_x_log10()+
scale_fill_brewer(palette = 'set1')+
facet_wrap(~ color)+
theme_dark()
ggplot(data= diamonds, aes(x= price))+
geom_histogram(aes(color = cut, fill = cut))+
scale_x_log10()+
facet_wrap(~ color)
ggplot(data= diamonds, aes(x= price))+
geom_histogram()+
scale_x_log10()+
scale_fill_brewer(aes(color = cut, fill = cut))
ggplot(data= diamonds, aes(x= price))+
geom_histogram()+
scale_x_log10()+
scale_fill_brewer(aes(color = cut, fill = cut))+
facet_wrap(~ color)
ggplot(data= diamonds, aes(x= price))+
geom_histogram()+
scale_x_log10()+
scale_fill_brewer(aes(color = cut, fill = cut), palette = 2)+
facet_wrap(~ color)
ggplot(data= diamonds, aes(x= price))+
geom_histogram()+
scale_x_log10()+
scale_fill_brewer(aes(color = cut, fill = cut), palette = '2'set1)+
facet_wrap(~ color)
ggplot(data= diamonds, aes(x= price))+
geom_histogram()+
scale_x_log10()+
scale_fill_brewer(aes(color = cut, fill = cut), palette = set1)+
facet_wrap(~ color)
ggplot(data= diamonds, aes(x= price))+
geom_histogram()+
scale_x_log10()+
scale_fill_brewer(aes(color = cut, fill = cut), palette = 'set1')+
facet_wrap(~ color)
ggplot(data= diamonds, aes(x= price))+
geom_histogram()+
scale_x_log10()+
scale_fill_brewer(aes(color = cut, fill = cut), palette = 1 )+
facet_wrap(~ color)
ggplot(data= diamonds, aes(x= price))+
geom_histogram()+
scale_x_log10()+
scale_fill_brewer(aes(color = cut, fill = cut), palette = 'Set1' )+
facet_wrap(~ color)
ggplot(data= diamonds, aes(x= price))+
geom_histogram(aes(color = cut, fill = cut))+
scale_x_log10()+
scale_fill_brewer(palette = 'Set1' )+
facet_wrap(~ color)
ggplot(data= diamonds, aes(x= price))+
geom_histogram(aes(color = cut, fill = cut))+
scale_x_log10()+
scale_fill_brewer(palette = 'Set2' )+
facet_wrap(~ color)
ggplot(data= diamonds, aes(x= price))+
geom_histogram(aes(color = cut))+
scale_x_log10()+
scale_fill_brewer(palette = 'Set2' )+
facet_wrap(~ color)
, fill = cut
ggplot(data= diamonds, aes(x= price))+
geom_histogram(aes(color = cut, fill = cut))+
scale_x_log10()+
scale_fill_brewer(palette = 'Set2' )+
facet_wrap(~ color)
ggplot(data= diamonds, aes(x= price))+
geom_histogram(aes(color = cut, fill = cut))+
scale_x_log10()+
scale_fill_brewer(palette = 'Set3' )+
facet_wrap(~ color)
ggplot(data= diamonds, aes(x= price))+
geom_histogram(aes(color = cut, fill = cut))+
scale_x_log10()+
scale_fill_brewer(palette = 'Accent' )+
facet_wrap(~ color)
ggplot(data= diamonds, aes(x= price))+
geom_histogram(aes(color = cut, fill = cut))+
scale_x_log10()+
scale_fill_brewer(palette = 'Dark2' )+
facet_wrap(~ color)
ggplot(data= diamonds, aes(x= price))+
geom_histogram(aes(color = cut, fill = cut))+ # could use position = "dodge" to set bars beside
scale_x_log10()+
scale_fill_brewer(palette = 'Set1' )+
facet_wrap(~ color)
ggplot(data= diamonds, aes(x= price))+
geom_histogram(aes(color = cut, fill = cut))+ # could use position = "dodge" to set bars beside
scale_x_log10()+
scale_fill_brewer(palette = 'Set1' )+
facet_wrap(~ color)+
theme_dark()
ggplot(data= diamonds, aes(x= price))+
geom_histogram(aes(color = cut, fill = cut))+ # could use position = "dodge" to set bars beside
scale_x_log10()+
scale_fill_brewer(palette = 'Set1' )+
facet_wrap(~ color)+
theme_minimal() #
theme_dark
ggplot(data= diamonds, aes(x= price))+
geom_histogram(aes(color = cut, fill = cut))+ # could use position = "dodge" to set bars beside
scale_x_log10()+
scale_fill_brewer(palette = 'Set1' )+
facet_wrap(~ color)+
theme_light() #
ggplot(data= diamonds, aes(x= price))+
geom_histogram(aes(color = cut, fill = cut))+ # could use position = "dodge" to set bars beside
scale_x_log10()+
scale_fill_brewer(palette = 'Set1' )+
facet_wrap(~ color)+
theme_gray() #
ggplot(data= diamonds, aes(x= price))+
geom_histogram(aes(color = cut, fill = cut))+ # could use position = "dodge" to set bars beside
scale_x_log10()+
scale_fill_brewer(palette = 'Set1' )+
facet_wrap(~ color)+
theme_grey() #
ggplot(data= diamonds, aes(x= price))+
geom_histogram(aes(color = cut, fill = cut))+ # could use position = "dodge" to set bars beside
scale_x_log10()+
scale_fill_brewer(palette = 'Set1' )+
facet_wrap(~ color)+
theme_grey() #
ggplot(data= diamonds, aes(x= price))+
geom_histogram(aes(color = cut, fill = cut))+ # could use position = "dodge" to set bars beside
scale_x_log10()+
scale_fill_brewer(palette = 'Set1' )+
facet_wrap(~ color)+
theme_bw() #
ggplot(data= diamonds, aes(x= price))+
geom_histogram(aes(color = cut, fill = cut))+ # could use position = "dodge" to set bars beside
scale_x_log10()+
scale_fill_brewer(palette = 'Set1' )+
facet_wrap(~ color)+
theme_linedraw() #
ggplot(data= diamonds, aes(x= price))+
geom_histogram(aes(color = cut, fill = cut))+ # could use position = "dodge" to set bars beside
scale_x_log10()+
scale_fill_brewer(palette = 'Set1' )+
facet_wrap(~ color)+
theme_dark() #
ggplot(data= diamonds, aes(x= price))+
geom_histogram(aes(color = cut, fill = cut))+ # could use position = "dodge" to set bars beside
scale_x_log10()+
scale_fill_brewer(palette = 'Set1', type = 'qual' )+
facet_wrap(~ color)+
theme_dark() # and a lot other theme with other option like font
ggplot(data= diamonds, aes(x= price))+
geom_histogram(aes(color = cut, fill = cut))+ # could use position = "dodge" to set bars beside
scale_x_log10()+
scale_fill_brewer(type = 'qual' )+
facet_wrap(~ color)+
theme_dark() # and a lot other theme with other option like font
palette = 'Set1',
ggplot(data= diamonds, aes(x= price))+
geom_histogram(aes(color = cut, fill = cut))+ # could use position = "dodge" to set bars beside
scale_x_log10()+
scale_fill_brewer(palette = 'Set1', type = 'qual' )+
facet_wrap(~ color)+
theme_dark() # and a lot other theme with other option like font
ggplot(data= diamonds, aes(x= price))+
geom_histogram(aes(color = cut, fill = cut))+ # could use position = "dodge" to set bars beside
scale_x_log10()+
scale_fill_brewer( type = 'qual' , palette = 'Set1')+
facet_wrap(~ color)+
theme_dark() # and a lot other theme with other option like font
ggplot(data= diamonds, aes(x= price))+
geom_histogram(aes(color = cut, fill = cut))+ # could use position = "dodge" to set bars beside
scale_x_log10()+
scale_fill_brewer( palette = 'Set1')+
facet_wrap(~ color)+
theme_dark() # and a lot other theme with other option like font
ggplot(data= diamonds, aes(x= price))+
geom_histogram(aes(color = cut, fill = cut))+ # could use position = "dodge" to set bars beside
scale_x_log10()+
scale_fill_brewer( type = 'qual' )+
facet_wrap(~ color)+
theme_dark() # and a lot other theme with other option like font
ggplot(data= diamonds, aes(x= price))+
geom_histogram(aes(color = cut, fill = cut))+ # could use position = "dodge" to set bars beside
scale_x_log10()+
scale_fill_brewer( type = 'qual' , palette = 'Set3')+
facet_wrap(~ color)+
theme_dark() # and a lot other theme with other option like font
ggplot(data= diamonds, aes(x= price))+
geom_histogram(aes(color = cut, fill = cut))+ # could use position = "dodge" to set bars beside
scale_x_log10()+
scale_fill_brewer( type = 'qual' , palette = 'Set2')+
facet_wrap(~ color)+
theme_dark() # and a lot other theme with other option like font
ggplot(data = diamonds, aes(table, price))+
geom_point(aes(color = cut), alpha = 0.1)
ggplot(data = diamonds, aes(table, price))+
geom_point(aes(color = cut), alpha = 0.1)+
scale_fill_brewer( type = 'qual' , palette = 'Set2')
ggplot(data = diamonds, aes(table, price))+
geom_point(aes(color = cut), alpha = 0.1)+
scale_fill_brewer( type = 'qual' , palette = 'Set2')+
scale_x_log10()
ggplot(data = diamonds, aes(table, price))+
geom_point(aes(color = cut), alpha = 0.1)+
scale_fill_brewer( type = 'qual' , palette = 'Set2')+
coord_cartesian( xlim= c(50,80))
ggplot(data = diamonds, aes(table, price))+
geom_point(aes(color = cut), alpha = 0.1)+
scale_fill_brewer( type = 'qual' , palette = 'Set1')+
coord_cartesian( xlim= c(50,80))
ggplot(data = diamonds, aes(table, price))+
geom_point(aes(color = cut), alpha = 0.1)+
scale_fill_brewer( type = 'qual')+
coord_cartesian( xlim= c(50,80))
ggplot(data = diamonds, aes(table, price))+
geom_point(aes(color = cut), alpha = 0.1)+
scale_fill_brewer( type = 'qual')+
scale_y_log10()+
coord_cartesian( xlim= c(50,80))
ggplot(data = diamonds, aes(table, price))+
geom_point(aes(color = cut))+
scale_fill_brewer( type = 'qual')+
coord_cartesian( xlim= c(50,80))
ggplot(data = diamonds, aes(table, price))+
geom_point(aes(color = cut), size = 3)+
scale_fill_brewer( type = 'qual')+
coord_cartesian( xlim= c(50,80))
ggplot(data = diamonds, aes(table, price))+
geom_point(aes(color = cut), size = 3)+
scale_fill_brewer( type = 'qual')+
coord_cartesian( xlim= c(50,80))+
facet_wrap(~table)
ggplot(data = diamonds, aes(table, price))+
geom_point(aes(color = cut), size = 3)+
scale_fill_brewer( type = 'qual')+
coord_cartesian( xlim= c(50,80))+
facet_wrap(~cut)
ggplot(data = diamonds, aes(table, price))+
geom_point(aes(color = cut), size = 3)+
scale_fill_brewer( type = 'qual')+
scale_x_continuous(breaks = seq(50,80,2))+
coord_cartesian( xlim= c(50,80))+
facet_wrap(~cut)
ggplot(data = diamonds, aes(table, price))+
geom_point(aes(color = cut), size = 3)+
scale_fill_brewer( type = 'qual')+
scale_x_continuous(breaks = seq(50,80,2))+
coord_cartesian( xlim= c(50,80))
ggplot(data= diamonds, aes(price, (x*y*z)))+
geom_point(aes(color = clarity))
ggplot(data= diamonds, aes(price, (x*y*z)))+
geom_point(aes(color = clarity))+
scale_x_log10()
ggplot(data= diamonds, aes(price, (x*y*z)))+
geom_point(aes(color = clarity))+
scale_x_log10()+
coord_cartesian(xlim= c(0, quantile(diamonds$price, 0.99)))
ggplot(data= diamonds, aes(price, (x*y*z)))+
geom_point(aes(color = clarity))+
scale_x_log10()
ggplot(data= diamonds, aes(price, (x*y*z)))+
geom_point(aes(color = clarity))+
scale_x_log10()+
coord_cartesian(xlim= c(0, quantile(diamonds$price, 0.99)))
ggplot(data= diamonds, aes(price, (x*y*z)))+
geom_point(aes(color = clarity))+
scale_x_log10()+
coord_cartesian(ylim= c(0, quantile(diamonds$price, 0.99)))
ggplot(data= diamonds, aes(price, (x*y*z)))+
geom_point(aes(color = clarity))+
scale_x_log10()+
coord_cartesian(ylim= c(0, quantile(diamonds$price, 0.80)))
ggplot(data= diamonds, aes(price, (x*y*z)))+
geom_point(aes(color = clarity))+
scale_x_log10()+
coord_cartesian(ylim= c(0, quantile(diamonds$price, 0.50)))
ggplot(data= diamonds, aes(price, (x*y*z)))+
geom_point(aes(color = clarity))+
scale_x_log10()+
coord_cartesian(ylim= c(0, quantile(diamonds$price, 0.99)))
ggplot(data= diamonds, aes((x*y*z), price))+
geom_point(aes(color = clarity))+
scale_x_log10()+
coord_cartesian(ylim= c(0, quantile(diamonds$price, 0.99)))
ggplot(data= diamonds, aes((x*y*z), price))+
geom_point(aes(color = clarity))+
scale_x_log10()+
coord_cartesian(xlim= c(0, quantile(diamonds$price, 0.99)))
ggplot(data= diamonds, aes((x*y*z), price))+
geom_point(aes(color = clarity))+
scale_x_log10()+
coord_cartesian(xlim= c(0, quantile(diamonds$price, 0.99)))
# Create a scatterplot of diamond price vs.
# volume (x * y * z) and color the points by
# the clarity of diamonds. Use scale on the y-axis
# to take the log10 of price. You should also
# omit the top 1% of diamond volumes from the plot.
quantile(diamonds$price, 0.99)
ggplot(data= diamonds, aes((x*y*z), price))+
geom_point(aes(color = clarity))+
scale_x_log10()+
coord_cartesian(xlim= c(0, 17378))
ggplot(data= diamonds, aes((x*y*z), price))+
geom_point(aes(color = clarity))+
scale_x_log10()
ggplot(data= diamonds, aes((x*y*z), price))+
geom_point(aes(color = clarity))
ggplot(data= diamonds, aes((x*y*z), price))+
geom_point(aes(color = clarity))+
coord_cartesian(xlim= c(0, 17378))
ggplot(data= diamonds, aes((x*y*z), price))+
geom_point(aes(color = clarity))+
coord_cartesian(xlim= c(0, quantile(diamonds$price, 0.99)),
ylim= c(0, quantile(diamonds$price, 0.99)))
ggplot(data= diamonds, aes((x*y*z), price))+
geom_point(aes(color = clarity))+
coord_cartesian(xlim= c(0, quantile(diamonds$price, 0.99)),
ylim= c(0, quantile(diamonds$price, 0.99)))+
scale_x_log10()
ggplot(data= diamonds, aes((x*y*z), price))+
geom_point(aes(color = clarity))+
coord_cartesian(xlim= c(0, quantile(diamonds$price, 0.99)),
ylim= c(0, quantile(diamonds$price, 0.99)))+
scale_y_log10()
ggplot(data= diamonds, aes((x*y*z), price))+
geom_point(aes(color = clarity))+
coord_cartesian(xlim= c(0, quantile(diamonds$price, 0.99)),
ylim= c(0, quantile(diamonds$price, 0.99)))+
scale_y_log10()
ggplot(data= diamonds, aes((x*y*z), price))+
geom_point(aes(color = clarity))+
coord_cartesian(xlim= c(0, quantile(diamonds$price, 0.99)),
ylim= c(0, quantile(diamonds$price, 0.99)))+
scale_x_log10()
ggplot(data= diamonds, aes((x*y*z), price))+
geom_point(aes(color = clarity))+
coord_cartesian(xlim= c(0, quantile(diamonds$price, 0.99)),
ylim= c(0, quantile(diamonds$price, 0.99)))+
scale_y_log10()
ggplot(data= diamonds, aes((x*y*z), price))+
geom_point(aes(color = clarity))+
coord_cartesian(xlim= c(0, quantile(diamonds$price, 0.99)),
ylim= c(0, quantile(diamonds$price, 0.99)))
diamonds$volum <- diamonds$x * diamonds$y * diamonds$z
diamonds$volume <- diamonds$x * diamonds$y * diamonds$z
ggplot(data= diamonds, aes(volume, price))+
geom_point(aes(color = clarity))+
coord_cartesian(xlim= c(0, quantile(diamonds$price, 0.99)),
ylim= c(0, quantile(diamonds$price, 0.99)))
ggplot(data= diamonds, aes(volume, price))+
geom_point(aes(color = clarity))+
coord_cartesian(xlim= c(0, quantile(diamonds$price, 0.99)),
ylim= c(0, quantile(diamonds$price, 0.99)))+
scale_y_log10()
ggplot(data= diamonds, aes(volume, price))+
geom_point(aes(color = clarity))+
coord_cartesian(xlim= c(0, quantile(diamonds$price, 0.99)),
ylim= c(0, quantile(diamonds$price, 0.99)))+
scale_x_log10()
ggplot(data= diamonds, aes(volume, price))+
geom_point(aes(color = clarity))+
coord_cartesian(xlim= c(0, quantile(diamonds$price, 0.99)),
ylim= c(0, quantile(diamonds$price, 0.99)))+
scale_color_brewer(type = 'div')
ggplot(data= diamonds, aes(volume, price))+
geom_point(aes(color = clarity))+
scale_x_log10()+
coord_cartesian(xlim= c(0, quantile(diamonds$price, 0.99)),
ylim= c(0, quantile(diamonds$price, 0.99)))+
scale_color_brewer(type = 'div')
ggplot(data= diamonds, aes(volume, price))+
geom_point(aes(color = clarity))+
scale_y_log10()+
coord_cartesian(xlim= c(0, quantile(diamonds$price, 0.99)),
ylim= c(0, quantile(diamonds$price, 0.99)))+
scale_color_brewer(type = 'div')
ggplot(data= diamonds, aes(volume, log(price)))+
geom_point(aes(color = clarity))+
coord_cartesian(xlim= c(0, quantile(diamonds$price, 0.99)),
ylim= c(0, quantile(diamonds$price, 0.99)))+
scale_color_brewer(type = 'div')
ggplot(data= diamonds, aes(volume, price))+
geom_point(aes(color = clarity))+
coord_cartesian(xlim= c(0, quantile(diamonds$price, 0.99)),
ylim= c(0, quantile(diamonds$price, 0.99)))+
scale_color_brewer(type = 'div')
ggplot(data= diamonds, aes(volume, price))+
geom_point(aes(color = clarity))
ggplot(data= diamonds, aes(volume, price))+
geom_point(aes(color = clarity))+
coord_cartesian(xlim= c(0, quantile(diamonds$price, 0.99)),
ylim= c(0, quantile(diamonds$price, 0.99)))+
scale_color_brewer(type = 'div')
ggplot(data= diamonds, aes(volume, price))+
geom_point(aes(color = clarity))+
coord_cartesian(xlim= c(0, quantile(diamonds$volume, 0.99)),
ylim= c(0, quantile(diamonds$price, 0.99)))+
scale_color_brewer(type = 'div')
ggplot(data= diamonds, aes(volume, price))+
geom_point(aes(color = clarity))+
coord_cartesian(xlim= c(0, quantile(diamonds$volume, 0.99)),
ylim= c(0, quantile(diamonds$price, 0.99)))+
scale_color_brewer(type = 'div')+
scale_x_log10()
ggplot(data= diamonds, aes(volume, price))+
geom_point(aes(color = clarity))+
coord_cartesian(xlim= c(0, quantile(diamonds$volume, 0.99)) )+
scale_color_brewer(type = 'div')+
scale_x_log10()
ggplot(data= diamonds, aes(volume, price))+
geom_point(aes(color = clarity))+
coord_cartesian(xlim= c(0, quantile(diamonds$volume, 0.99)) )+
scale_color_brewer(type = 'div')+
scale_y_log10()
pf <- read.delim('/datasets/ud651/pseudo_facebook.tsv')
pf <- read.delim('pseudo_facebook.tsv')
pf <- read.delim('pseudo_facebook.tsv')
getwd()
setwd('C:\\Users\\secretary-1\\Udacity\\Data Analysis\\P5')
pf <- read.delim('pseudo_facebook.tsv')
View(pf)
pf$prop_initiated <- pf$friendships_initiated / pf$friend_count
View(pf)
pf$year_joined <- floor(2014 - pf$tenure / 365)
pf$year_joined.bucket <- cut(pf$year_joined, breaks = c(2004, 2009, 2011, 2012, 2014), labels = c("(2004,2009]", "(2009,2011]", "(2011,2012]", "(2012,2014]"))
setwd('C:\\Users\\secretary-1\\Udacity\\Data Analysis\\P5')
ggplot(data = pf, aes(tenure, prop_initiated))+
geom_line(aes(color = year_joined.bucket))
ggplot(data = subset(pf, !is.na(tenure), aes(tenure, prop_initiated))+
ggplot(data = subset(pf, !is.na(tenure)), aes(tenure, prop_initiated))+
geom_line(aes(color = year_joined.bucket))
ggplot(data = subset(pf, !is.na(tenure)), aes(tenure, prop_initiated))+
geom_line(aes(color = year_joined.bucket))
ggplot(data = subset(pf, !is.na(tenure)), aes(tenure, prop_initiated))+
geom_line(aes(color = year_joined.bucket), na.rm = FALSE)
ggplot(data = subset(pf, !is.na(tenure)), aes(tenure, prop_initiated))+
geom_line(aes(color = year_joined.bucket), na.rm = TRUE)
ggplot(data = subset(pf, !is.na(tenure)), aes(tenure, prop_initiated))+
geom_line(aes(color = year_joined.bucket))
subset(pf, !is.na(tenure))
ggplot(data = subset(pf, !is.na(tenure)), aes(tenure, prop_initiated))+
geom_line(aes(color = year_joined.bucket))
setwd('C:\\Users\\secretary-1\\Udacity\\Data Analysis\\P5')
setwd('C:\\Users\\secretary-1\\Udacity\\Data Analysis\\P5')
ggplot(data = subset(pf, !is.na(tenure)), aes(tenure, prop_initiated))+
geom_line(aes(color = year_joined.bucket))
ggplot(data = subset(pf, !is.na(tenure)), aes(tenure, prop_initiated))+
geom_line(aes(color = year_joined.bucket), stat = 'summary', fun.y = median)
ggplot(data = subset(pf, !is.na(tenure)), aes(30*(tenure/30), prop_initiated))+
geom_line(aes(color = year_joined.bucket), stat = 'summary', fun.y = median)
ggplot(data = subset(pf, !is.na(tenure)), aes(30*(round(tenure/30)), prop_initiated))+
geom_line(aes(color = year_joined.bucket), stat = 'summary', fun.y = median)
ggplot(data = subset(pf, !is.na(tenure)), aes(tenure), prop_initiated))+
geom_line(aes(color = year_joined.bucket), stat = 'summary', fun.y = median)+
geom_smooth()
ggplot(data = subset(pf, !is.na(tenure)), aes(tenure, prop_initiated))+
geom_line(aes(color = year_joined.bucket), stat = 'summary', fun.y = median)+
geom_smooth()
ggplot(data = subset(pf, !is.na(tenure)), aes(30*(round(tenure/30)), prop_initiated))+
geom_line(aes(color = year_joined.bucket), stat = 'summary', fun.y = median)+
geom_hline(stat = mean)
mean(subset(pf, year_joined.bucket == '(2012,2014]')$prop_initiated)
subset(pf, year_joined.bucket == '(2012,2014]')
mean(subset(pf, year_joined.bucket == '(2012,2014]')$prop_initiated)
largets <- subset(pf, year_joined.bucket == '(2012,2014]')
mean(largets$prop_initiated)
largets$prop_initiate)
largets$prop_initiate
View(largets)
subset(largets, !is.na(prop_initiate))$prprop_initiate
subset(largets, !is.na(prop_initiate))$prop_initiate
largets <- subset(pf, year_joined.bucket == '(2012,2014]' & !is.na(prop_initiated))
mean(largets$prop_initiate)
ggplot(data = subset(pf, !is.na(tenure)), aes(30*(round(tenure/30)), prop_initiated))+
geom_line(aes(color = year_joined.bucket), stat = 'summary', fun.y = median)+
geom_hline(yintercept= mean(largets$prop_initiate))
geom_hline(yintercept= mean(subset(pf, !is.na(prop_initiate)$prop_initiate))
ggplot(data = subset(pf, !is.na(tenure)), aes(tenure, prop_initiated))+
geom_line(aes(color = year_joined.bucket), stat = 'summary', fun.y = median)+
geom_smooth()+
geom_hline(yintercept= mean(subset(pf, !is.na(prop_initiate)$prop_initiate)))
group_2012 <- subset(pf, year_joined.bucket == '(2012,2014]' & !is.na(prop_initiated))
ggplot(data = subset(pf, !is.na(tenure)), aes(30*(round(tenure/30)), prop_initiated))+
geom_line(aes(color = year_joined.bucket), stat = 'summary', fun.y = median)+
geom_hline(yintercept= mean(group_2012$prop_initiate))
mean(group_2012$prop_initiated)
ggplot(data = subset(pf, !is.na(tenure)), aes(30*(round(tenure/30)), prop_initiated))+
geom_line(aes(color = year_joined.bucket), stat = 'summary', fun.y = median)+
geom_hline(yintercept= mean(group_2012$prop_initiate))
ggplot(data= pf, aes(price/carat, cut))+
geam_point(aes(color = color))
ggplot(data= pf, aes(price/carat, cut))+
geom_point(aes(color = color))
ggplot(data= diamonds, aes(price/carat, cut))+
geom_point(aes(color = color))
ggplot(data= diamonds, aes(cut, price/carat))+
geom_point(aes(color = color))
ggplot(data= diamonds, aes(cut, price/carat))+
geom_point(aes(color = color))+
facet_wrap(~clarity)
ggplot(data= diamonds, aes(cut, price/carat))+
geom_point(aes(color = color))+
facet_wrap(~clarity)+
scale_color_brewer(type = 'div')
ggplot(data= diamonds, aes(cut, price/carat))+
geom_jitter(aes(color = color))+
facet_wrap(~clarity)+
scale_color_brewer(type = 'div')
