geom_col()
p2 <- ggplot(data= diamonds_mp_by_color, aes(color, mean_price))+
geom_col()
grid.arrange(p1, p2, ncol=1)
yo <- read.csv('yogurt.csv')
str(yo)
ggplot(data= yo, aes(mixed.berry))+
geom_histogram()
library(ggplot2)
library(tidyr)
library(reshape2)
library(dplyr)
ggplot(data= yo, aes(mixed.berry))+
geom_histogram()
str(yo)
ggplot(data= yo)+
geom_histogram()
ggplot(data= yo, aes(id))+
geom_histogram()
yo$id <- factor(yo$id)
ggplot(data= yo, aes(id))+
geom_histogram()
str(yo)
ggplot(data= yo, aes(id))+
geom_histogram(stat = 'count')
ggplot(data= yo, aes(id))+
geom_histogram(stat = 'summary', fun.x = mean)
ggplot(data= yo, aes(id))+
geom_histogram(stat = 'summary')
ggplot(data= yo, aes(id))+
geom_histogram(stat = 'count')
ggplot(data= yo, aes(id))+
geom_line(stat = 'count')
str(yo)
ggplot(data= yo, aes(id))+
geom_histogram(stat = 'count')
ggplot(data= yo, aes(y=id))+
geom_histogram(stat = 'count')
ggplot(data= yo, aes(y=id))+
geom_histogram()
ggplot(data= yo, aes(y=id))+
geom_count()
ggplot(data= yo, aes(id))+
geom_histogram(stat = 'summary', fun.y=mean)
ggplot(data= yo, aes(id))+
geom_histogram(stat = 'count', fun.y=mean)
ggplot(data= yo, aes(id))+
geom_histogram(stat = 'count')
ggplot(data= yo, aes(id, color= id))+
geom_histogram(stat = 'count')
ggplot(data= yo, aes(id))+
geom_histogram(stat = 'count')
yo <- read.csv('yogurt.csv')
ggplot(data= yo, aes(id))+
geom_histogram(stat = 'count')
ggplot(data= yo, aes(id))+
geom_histogram()
ggplot(data= yo, aes(id))+
geom_histogram(bins = 0.5)
ggplot(data= yo, aes(id))+
geom_histogram(binwidth = 0.5)
ggplot(data= yo, aes(id))+
geom_histogram(binwidth = 1)
ggplot(data= yo, aes(id))+
geom_histogram(binwidth = 5)
ggplot(data= yo, aes(id). binwidth = 5)+
ggplot(data= yo, aes(id), binwidth = 5)+
geom_histogram()
ggplot(data= yo, aes(id), binwidth = 0.5)+
geom_histogram()
ggplot(data= yo, aes(id), binwidth = 0.5)+
geom_histogram()
ggplot(data= yo, aes(id), binwidth = 1)+
geom_histogram()
ggplot(data= yo, aes(id), binwidth = 1)+
geom_histogram()
qplot(data= yo, x= id)
yo$id <- factor(yo$id)
qplot(data= yo, x= id)
qplot(data= yo, x= id, geom = 'histogram')
yo <- read.csv('yogurt.csv')
qplot(data= yo, x= id, geom = 'histogram')
qplot(data= yo, x= id, geom = 'histogram', stat = 'count')
qplot(data= yo, x= id, geom = 'histogram')
yo$id <- factor(yo$id)
qplot(data= yo, x= id, geom = 'histogram')
qplot(data= yo, x= id, geom = 'histogram', stat="count")
yo$id <- factor(yo$id)
str(yo)
View(yo)
qplot(data= yo, x= price, geom = 'histogram')
qplot(data= yo, aes(price))+
geom_histogram()
qplot(data= yo, aes(price))+
geom_histogram()
qqplot(data= yo, aes(price))+
geom_histogram()
qqplot(data= yo, aes(x=price))+
geom_histogram()
qqplot(data= yo, aes(x=price))+
geom_histogram()
qqplot(data= yo, aes(x=price))+
geom_histogram(stat = 'count')
qqplot(data= yo, aes(price))+
geom_histogram()
qplot(data= yo, x=price)
unique(yo$id)
yo <- read.csv('yogurt.csv')
unique(yo$id)
yo$id <- factor(yo$id)
unique(yo$id)
qplot(data= yo, x=price)
library(ggplot2)
library(dplyr)
data("diamonds")
names(diamonds)
ggplot(data= diamonds, aes(x= price))+
geom_histogram(aes(color = cut, fill = cut))+ # could use position = "dodge" to set bars beside
scale_x_log10()+
scale_fill_brewer( type = 'qual' , palette = 'Set2')+
facet_wrap(~ color)+
theme_dark() # and a lot other theme with other option like font
ggplot(data = diamonds, aes(table, price))+
geom_point(aes(color = cut), size = 3)+
scale_fill_brewer( type = 'qual')+
scale_x_continuous(breaks = seq(50,80,2))+
coord_cartesian( xlim= c(50,80))
ggplot(data= diamonds, aes(volume, price))+
geom_point(aes(color = clarity))+
coord_cartesian(xlim= c(0, quantile(diamonds$volume, 0.99)) )+
scale_color_brewer(type = 'div')+
scale_y_log10()
diamonds$volume <- diamonds$x * diamonds$y * diamonds$z
ggplot(data= diamonds, aes(volume, price))+
geom_point(aes(color = clarity))+
coord_cartesian(xlim= c(0, quantile(diamonds$volume, 0.99)) )+
scale_color_brewer(type = 'div')+
scale_y_log10()
setwd('C:\\Users\\secretary-1\\Udacity\\Data Analysis\\P5')
pf <- read.delim('pseudo_facebook.tsv')
pf$prop_initiated <- pf$friendships_initiated / pf$friend_count
pf$year_joined <- floor(2014 - pf$tenure / 365)
pf$year_joined.bucket <- cut(pf$year_joined, breaks = c(2004, 2009, 2011, 2012, 2014), labels = c("(2004,2009]", "(2009,2011]", "(2011,2012]", "(2012,2014]"))
ggplot(data = subset(pf, !is.na(tenure)), aes(30*(round(tenure/30)), prop_initiated))+
geom_line(aes(color = year_joined.bucket), stat = 'summary', fun.y = median)
ggplot(data = subset(pf, !is.na(tenure)), aes(tenure, prop_initiated))+
geom_line(aes(color = year_joined.bucket), stat = 'summary', fun.y = median)+
geom_smooth()
mean(group_2012$prop_initiated)
group_2012 <- subset(pf, year_joined.bucket == '(2012,2014]' & !is.na(prop_initiated))
mean(group_2012$prop_initiated)
ggplot(data = subset(pf, !is.na(tenure)), aes(30*(round(tenure/30)), prop_initiated))+
geom_line(aes(color = year_joined.bucket), stat = 'summary', fun.y = median)+
geom_hline(yintercept= mean(group_2012$prop_initiate))
ggplot(data= diamonds, aes(cut, price/carat))+
geom_jitter(aes(color = color))+
facet_wrap(~clarity)+
scale_color_brewer(type = 'div')
library(ggplot2)
library(dplyr)
library(gridExtra)
setwd('C:\\Users\\secretary-1\\Udacity\\Data Analysis\\P5')
pf <- read.csv('income_per_person_gdppercapita_ppp_inflation_adjusted.csv')
every_44_mean <- data.frame(country=pf[,1], I44_1st = rowMeans(pf[,2:44], na.rm=TRUE),
I44_2nd = rowMeans(pf[,45:88], na.rm=TRUE),
I44_3rd = rowMeans(pf[,89:132], na.rm=TRUE),
I44_4th = rowMeans(pf[,133:176], na.rm=TRUE),
I44_5th = rowMeans(pf[,177:220], na.rm=TRUE))
data1 <- subset(every_44_mean,
country == 'Saudi Arabia'| country == 'United Arab Emirates'|
country == 'Bahrain'| country == 'Kuwait'|
country == 'Oman' | country == 'Qatar')
data1$country
data1$country <- c('Bahrain','Kuwait','Oman','Qatar','KSA','UAE')
p1 <- ggplot(data= data1, aes(country,I44_1st))+
geom_col()
p2 <- ggplot(data= data1, aes(country,I44_2nd))+
geom_col()
p3 <- ggplot(data= data1, aes(country,I44_3rd))+
geom_col()
p4 <- ggplot(data= data1, aes(country,I44_4th))+
geom_col()
p5 <- ggplot(data= data1, aes(country,I44_5th))+
geom_col()
grid.arrange(p1, p2, p3, p4, p5)
names(data1)
da
library(reshape2)
convr_data1 <- melt(data1, id.vars="country", variable="duration")
ggplot(convr_data1, aes(x=country, y=value, colour=duration)) +
geom_point(size=2)+
ylab('income per person')
ggsave('gcc_income.jpeg')
ggplot(aes(x = country, y= value, group = 1), data = convr_data1)+
geom_col(aes(color = duration, fill = factor(duration)))
ggplot(aes(x = duration, y= value, group = 1), data = convr_data1)+
geom_line(aes(color = country))
ggplot(convr_data1, aes(x=country, y=value, colour=duration)) +
geom_point(size=2)+
ylab('income per person')
ggplot(aes(x = country, y= value, group = 1), data = convr_data1)+
geom_col(aes(color = duration, fill = factor(duration)))
ggplot(aes(x = duration, y= value, group = 1), data = convr_data1)+
geom_line(aes(color = country))
View(every_44_mean)
pf2 <- read.csv('Book1.csv')
View(pf2)
View(every_44_mean)
merge(x = every_44_mean, y = pf2, by = "country", all.x = TRUE)
merge(every_44_mean, pf2, by = "country", all.x = TRUE)
merge(every_44_mean, pf2, country, all.x = TRUE)
merge(every_44_mean, pf2, 'country', all.x = TRUE)
merge(every_44_mean, pf2, by.x='country', all.x = TRUE)
merge(every_44_mean, pf2, by.every_44_mean='country', all.every_44_mean = TRUE)
new_pf1 <- merge(every_44_mean, pf2, by.every_44_mean='country', all.every_44_mean = TRUE)
View(new_pf1)
new_pf1 <- merge(every_44_mean, pf2, by.every_44_mean='country', by.y= 'Country' )
View(new_pf1)
new_pf1 <- merge(every_44_mean, pf2, by.every_44_mean='country', by.y= 'Country', all.x = TRUE )
new_pf1 <- merge(every_44_mean, pf2, by.every_44_mean=country, by.y= Country, all.x = TRUE )
new_pf1 <- merge(every_44_mean, pf2, by.x=country, by.y= Country, all.x = TRUE )
new_pf1 <- merge(every_44_mean, pf2, by.every_44_mean=country, by.pf2= Country, all.x = TRUE )
View(new_pf1)
new_pf1 <- merge(every_44_mean, pf2, by.every_44_mean=country, by.pf2= Country, all.every_44_mean = TRUE )
View(new_pf1)
new_pf2 <- inner_join(every_44_mean, pf2)
new_pf2 <- left_join(every_44_mean, pf2, by= "Country")
new_pf2 <- left_join(every_44_mean, pf2, by= Country)
new_pf2 <- left_join(every_44_mean, pf2, by= country)
new_pf2 <- left_join(every_44_mean, pf2, by= 'country')
new_pf2 <- left_join(every_44_mean, pf2, by= ('country','Country')
new_pf2 <- left_join(every_44_mean, pf2, by= ('country','Country'))
new_pf2 <- left_join(every_44_mean, pf2, by('country','Country'))
new_pf2 <- left_join(every_44_mean, pf2, by('country'))
new_pf2 <- left_join(every_44_mean, pf2, by='country')
new_pf2 <- left_join(every_44_mean, pf2, by='Country')
new_pf2 <- left_join(every_44_mean, pf2, by=('Country'))
new_pf2 <- left_join(every_44_mean, pf2, by=c('country','Country'))
1 <- data_frame(
x = letters[1:3],
y = LETTERS[1:3],
a = rnorm(3)
)
d2 <- data_frame(
x2 = letters[3:1],
y2 = LETTERS[3:1],
b = rnorm(3)
)
d1 <- data_frame(
x = letters[1:3],
y = LETTERS[1:3],
a = rnorm(3)
)
d2 <- data_frame(
x2 = letters[3:1],
y2 = LETTERS[3:1],
b = rnorm(3)
)
View(convr_data1)
View(d1)
View(d2)
View(convr_data1)
View(d1)
View(data1)
View(d2)
View(every_44_mean)
View(d1)
View(d2)
View(d1)
View(d2)
View(d1)
View(d2)
left_join(d1, d2, by = c("x" = "x2", "y" = "y2"))
new_pf2 <- left_join(every_44_mean, pf2, by=c('country'='Country'))
pf2$Country <- factor(pf2$Country)
new_pf2 <- left_join(every_44_mean, pf2, by=c('country'='Country'))
class(pf2$Country)
class(every_44_mean$country)
join(every_44_mean, pf2, type = "left")
semi_join(every_44_mean, pf2)
pf2 <- read.csv('Book1.csv')
new_pf2 <- left_join(every_44_mean, pf2, by=c('country'='country'))
class(pf2$country)
class(every_44_mean$country)
every_44_mean$country <- as.character(every_44_mean$country)
class(every_44_mean$country)
pf2$country <- as.character(pf2$country)
class(pf2$country)
new_pf2 <- left_join(every_44_mean, pf2, by=c('country'='country'))
View(new_pf2)
class(new_pf2$country)
str(new_pf2)
new_pf2$country <- factor(new_pf2$country)
class(new_pf2$country)
str(new_pf2)
new_pf1 <- merge(every_44_mean, pf2, by.every_44_mean=country, by.pf2= country, all.every_44_mean = TRUE )
View(new_pf1)
View(new_pf2)
View(data1)
View(convr_data1)
View(convr_data1)
View(data1)
convr_data1 <-
melt(new_pf2, id.vars=c("country",'Location', 'Income') , variable="duration")
convr_data1 <- melt(new_pf2, id.vars=c("country",'Location', 'Income') , variable="duration")
View(convr_data1)
View(data1)
View(new_pf2)
is.na(new_pf2$Location)
!is.na(new_pf2$Location)
subset(new_pf2, is.na(new_pf2$Location))
pf2 <- read.csv('Book1.csv')
new_pf2 <- left_join(every_44_mean, pf2, by=c('country'='country'))
every_44_mean$country <- as.character(every_44_mean$country)
class(every_44_mean$country)
pf2$country <- as.character(pf2$country)
class(pf2$country)
new_pf2$country <- factor(new_pf2$country)
class(new_pf2$country)
new_pf2 <- left_join(every_44_mean, pf2, by=c('country'='country'))
subset(new_pf2, is.na(new_pf2$Location))
pf2 <- read.csv('Book1.csv')
every_44_mean$country <- as.character(every_44_mean$country)
class(every_44_mean$country)
pf2$country <- as.character(pf2$country)
class(pf2$country)
new_pf2$country <- factor(new_pf2$country)
class(new_pf2$country)
new_pf2 <- left_join(every_44_mean, pf2, by=c('country'='country'))
subset(new_pf2, is.na(new_pf2$Location))
convr_data1 <- melt(new_pf2, id.vars=c("country",'Location', 'Income') , variable="duration")
View(convr_data1)
convr_data2 <- melt(new_pf2, id.vars=c("country",'Location', 'Income') , variable="duration")
class(pf$country)
pf$country <- as.character(pf$country)
class(pf$country)
pf2$country <- as.character(pf2$country)
class(pf2$country)
new_pf2 <- left_join(pf, pf2, by=c('country'='country'))
new_pf2$country <- factor(new_pf2$country)
class(new_pf2$country)
View(new_pf2)
pf <- read.csv('income_per_person_gdppercapita_ppp_inflation_adjusted.csv')
pf <- read.csv('income_per_person_gdppercapita_ppp_inflation_adjusted.csv', header = TRUE)
View(pf)
View(pf)
View(new_pf2)
convr_data2 <- melt(new_pf2, id.vars=c("country",'Location', 'Income') , variable="duration")
View(convr_data2)
as.numeric(convr_data2$duration)
class(convr_data2$duration)
as.numeric(as.character(convr_data2$duration))
as.character(convr_data2$duration)
as.integer(convr_data2$duration)
as.integer(as.character(convr_data2$duration))
pf <- read.csv('income_per_person_gdppercapita_ppp_inflation_adjusted.csv', check.names = FALSE)
View(pf)
pf$country <- as.character(pf$country)
class(pf$country)
new_pf2 <- left_join(pf, pf2, by=c('country'='country'))
new_pf2$country <- factor(new_pf2$country)
class(new_pf2$country)
convr_data2 <- melt(new_pf2, id.vars=c("country",'Location', 'Income') , variable="duration")
View(convr_data2)
View(convr_data2)
convr_data2 <- melt(new_pf2, id.vars=c("country",'Location', 'Income'))
View(convr_data2)
, variable="duration"
convr_data2 <- melt(new_pf2, id.vars=c("country",'Location', 'Income') , variable="Years")
convr_data2 <- melt(new_pf2, id.vars=c("country",'Location', 'Income') , variable="Years", value = 'GDP')
View(convr_data2)
convr_data2 <- melt(new_pf2, id.vars=c("country",'Location', 'Income') , variable="Years", value.name =  = 'GDP')
convr_data2 <- melt(new_pf2, id.vars=c("country",'Location', 'Income') , variable="Years", value.name ='GDP')
convr_data2 <- melt(new_pf2, id.vars=c("country",'Location', 'Income') , variable.name="Years", value.name ='GDP')
View(convr_data2)
ggplot(data = convr_data2, aes(Years, GDP))+
geom_line()
ggplot(data = convr_data2, aes(Years, GDP))+
geom_line(aes(color = Income))
ggplot(data = convr_data2, aes(Years, GDP))+
geom_line(aes(color = Income))+
scale_x_log10()
ggplot(data = convr_data2, aes(Years, GDP))+
geom_line(aes(color = Income))+
scale_y_log10()
ggplot(data = convr_data2, aes(Years, GDP))+
geom_line(aes(color = Income), stat = 'summary', fun.y = mean)+
scale_y_log10()
ggplot(data = convr_data2, aes(Years, GDP))+
geom_line(aes(color = Income), stat = 'summary', fun.x = mean)+
scale_y_log10()
ggplot(data = convr_data2, aes(Years, GDP))+
geom_line(aes(color = Income), stat = 'summary', fun.y = mean)+
scale_y_log10()
ggplot(data = convr_data2, aes(Years, GDP))+
geom_line(aes(color = Income), stat = 'summary', fun.y = mean)
ggplot(data = convr_data2, aes(Years, GDP))+
geom_line(aes(color = Income))
ggplot(data = convr_data2, aes(Years, GDP))+
geom_line(aes(color = Income))+
scale_x_continuous(breaks = c(1800, 2018,30))
ggplot(data = convr_data2, aes(Years, GDP))+
geom_line(aes(color = Income))+
scale_x_continuous(breaks = seq(1800, 2018,30))
class(convr_data2$Years)
as.integer(convr_data2$Years)
as.integer(as.character(convr_data2$Years))
class(convr_data2$Years)
as.numeric(as.character(convr_data2$Years))
convr_data2$Years <- as.numeric(as.character(convr_data2$Years))
class(convr_data2$Years)
ggplot(data = convr_data2, aes(Years, GDP))+
geom_line(aes(color = Income))+
scale_x_continuous(breaks = seq(1800, 2018,30))
convr_data2 <- melt(new_pf2, id.vars=c("country",'Location', 'Income') , variable.name="Years", value.name ='GDP')
convr_data2$Years <- as.integer(as.character(convr_data2$Years))
class(convr_data2$Years)
ggplot(data = convr_data2, aes(Years, GDP))+
geom_line(aes(color = Income))+
scale_x_continuous(breaks = seq(1800, 2018,30))
ggplot(data = convr_data2, aes(Years, GDP))+
geom_line(aes(color = Income))+
scale_x_continuous(breaks = seq(1800, 2018,20))
ggplot(data = convr_data2, aes(Years, GDP))+
geom_point(aes(color = Income))+
scale_x_continuous(breaks = seq(1800, 2018,20))
ggplot(data = convr_data2, aes(Years, GDP))+
geom_point(aes(color = Income), stat = 'summary', fun.y = mean)+
scale_x_continuous(breaks = seq(1800, 2018,20))
ggplot(data = convr_data2, aes(Years, GDP))+
geom_line(aes(color = Income), stat = 'summary', fun.y = mean)+
scale_x_continuous(breaks = seq(1800, 2018,20))
ggplot(data = convr_data2, aes(Years, GDP))+
geom_line(aes(color = Income), stat = 'summary', fun.y = mean)+
scale_x_continuous(breaks = seq(1800, 2018,20))+
facet_wrap(~Location)
ggplot(data = convr_data2, aes(Years, GDP))+
geom_line(aes(color = Income), stat = 'summary', fun.y = mean)+
scale_x_continuous(breaks = seq(1800, 2018,20))+
facet_wrap(~Location)
ggplot(data = convr_data2, aes(Years, GDP))+
geom_line(aes(color = Income), stat = 'summary', fun.y = mean)+
scale_x_continuous(breaks = seq(1800, 2018,20))+
facet_wrap(~Location)
ggsave('countries_income_during_200')
ggsave('countries_income_during_200.jpeg')
data("diamonds")
ggplot(data = diamonds, aes(carat/price, price))+
geom_point()
ggplot(data = diamonds, aes(carat, price))+
geom_point()
ggplot(data = diamonds, aes(carat, price))+
geom_point()+
coord_cartesian(xlim = c(0, quantile(diamonds$carat,0.99 )),
xlim = c(0, quantile(diamonds$price,0.99 )))
ggplot(data = diamonds, aes(carat, price))+
geom_point()+
coord_cartesian(xlim = c(0, quantile(diamonds$carat,0.99 )),
ylim = c(0, quantile(diamonds$price,0.99 )))
ggplot(data = diamonds, aes(carat, price))+
geom_point()+
coord_cartesian(xlim = c(0, quantile(diamonds$carat,0.99 )),
ylim = c(0, quantile(diamonds$price,0.99 )))+
stat_smooth(method = 'lm')
install.packages('GGally')
install.packages('scales')
install.packages('memisc')
install.packages('lattice')
install.packages('MASS')
install.packages("scales")
install.packages("lattice")
install.packages('car')
install.packages('reshape')
install.packages('plyr')
install.packages("lattice")
install.packages("plyr")
library(ggplot2)
library(GGally)
library(scales)
install.packages('scales')
install.packages("scales")
library(ggplot2)
detach("package:plyr", unload=TRUE)
# load the ggplot graphics package and the others
library(ggplot2)
library(GGally)
detach("package:plyr", unload=TRUE)
# load the ggplot graphics package and the others
library(ggplot2)
install.packages('plyr')
# load the ggplot graphics package and the others
library(ggplot2)
library(GGally)
library(scales)
library(memisc)
install.packages('lattice')
library(scales)
library(memisc)
set.seed(20022012)
diamond_samp <- diamonds[sample(1:length(diamonds$price), 10000), ]
ggpairs(diamond_samp,
lower = list(continuous = wrap("points", shape = I('.'))),
upper = list(combo = wrap("box", outlier.shape = I('.'))))
ggpairs(diamond_samp,
lower = list(continuous = wrap("points", shape = I('.'))),
upper = list(combo = wrap("box", outlier.shape = I('.'))))
ggpairs(diamond_samp,
lower = list(continuous = wrap("points", shape = I('.'))),
upper = list(combo = wrap("box", outlier.shape = I('.'))), axisLabels = 'internal')
ggpairs(diamond_samp,
lower = list(continuous = wrap("points", shape = I('.'))),
upper = list(combo = wrap("box", outlier.shape = I('.'))))
